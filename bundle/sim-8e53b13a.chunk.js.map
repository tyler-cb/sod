{"version":3,"file":"sim-8e53b13a.chunk.js","sources":["../../../ui/holy_paladin/inputs.ts","../../../ui/holy_paladin/presets.ts","../../../ui/holy_paladin/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\n\nimport {\n\tPaladinAura,\n\tPaladinJudgement,\n} from '../core/proto/paladin.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const AuraSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecHolyPaladin>({\n\tfieldName: 'aura',\n\tlabel: 'Aura',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinAura.NoPaladinAura },\n\t\t{ name: 'Devotion Aura', value: PaladinAura.DevotionAura },\n\t\t{ name: 'Retribution Aura', value: PaladinAura.RetributionAura },\n\t],\n});\n\nexport const JudgementSelection = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecHolyPaladin>({\n\tfieldName: 'judgement',\n\tlabel: 'Judgement',\n\tlabelTooltip: 'Judgement debuff you will use on the target during the encounter.',\n\tvalues: [\n\t\t{ name: 'None', value: PaladinJudgement.NoJudgement },\n\t\t{ name: 'Wisdom', value: PaladinJudgement.JudgementOfWisdom },\n\t\t{ name: 'Light', value: PaladinJudgement.JudgementOfLight },\n\t],\n});\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tPaladinAura,\n\tPaladinJudgement,\n\tHolyPaladin_Options as HolyPaladinOptions,\n} from '../core/proto/paladin.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\n\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '50350151020013053100515221-50023131203',\n\t}),\n};\n\nexport const DefaultOptions = HolyPaladinOptions.create({\n\taura: PaladinAura.DevotionAura,\n\tjudgement: PaladinJudgement.NoJudgement,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as HolyPaladinInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecHolyPaladin, {\n\tcssClass: 'holy-paladin-sim-ui',\n\tcssScheme: 'paladin',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.38,\n\t\t\t[Stat.StatSpirit]: 0.34,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.69,\n\t\t\t[Stat.StatSpellHaste]: 0.77,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectRegular,\n\t\t\tarcaneBrilliance: true,\n\t\t\tmoonkinAura: true,\n\t\t\tmanaSpringTotem: TristateEffect.TristateEffectRegular,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfSanctuary: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tjudgementOfWisdom: true,\n\t\t\tjudgementOfLight: true,\n\t\t\tfaerieFire: true,\n\t\t\texposeArmor: TristateEffect.TristateEffectImproved,\n\t\t\tsunderArmor: true,\n\t\t\tthunderClap: TristateEffect.TristateEffectImproved,\n\t\t\tinsectSwarm: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tHolyPaladinInputs.AuraSelection,\n\t\t\tHolyPaladinInputs.JudgementSelection,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t],\n\t\trotations: [\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecHolyPaladin>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecHolyPaladin,\n\t\t\ttooltip: 'Holy Paladin',\n\t\t\tdefaultName: 'Holy',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPaladin, 0),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceUnknown,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class HolyPaladinSimUI extends IndividualSimUI<Spec.SpecHolyPaladin> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHolyPaladin>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["AuraSelection","InputHelpers.makeSpecOptionsEnumInput","fieldName","label","values","name","value","PaladinAura","NoPaladinAura","DevotionAura","RetributionAura","JudgementSelection","labelTooltip","PaladinJudgement","NoJudgement","JudgementOfWisdom","JudgementOfLight","DefaultGear","PresetUtils.makePresetGear","StandardTalents","data","SavedTalents","create","talentsString","DefaultOptions","HolyPaladinOptions","aura","judgement","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","SPEC_CONFIG","registerSpecConfig","Spec","SpecHolyPaladin","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","TristateEffectRegular","arcaneBrilliance","moonkinAura","manaSpringTotem","thorns","devotionAura","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfSanctuary","blessingOfWisdom","blessingOfMight","debuffs","Debuffs","judgementOfWisdom","judgementOfLight","faerieFire","exposeArmor","sunderArmor","thunderClap","insectSwarm","playerIconInputs","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.InspirationUptime","HolyPaladinInputs.AuraSelection","HolyPaladinInputs.JudgementSelection","encounterPicker","showExecuteProportion","presets","rotations","autoRotation","_player","APLRotation","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassPaladin","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","defaultGear","HolyPaladinSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}