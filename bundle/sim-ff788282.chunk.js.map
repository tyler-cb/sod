{"version":3,"file":"sim-ff788282.chunk.js","sources":["../../../ui/protection_warrior/inputs.ts","../../../ui/protection_warrior/presets.ts","../../../ui/protection_warrior/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport {\n\tWarriorShout\n} from '../core/proto/warrior.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const StartingRage = InputHelpers.makeSpecOptionsNumberInput<Spec.SpecProtectionWarrior>({\n\tfieldName: 'startingRage',\n\tlabel: 'Starting Rage',\n\tlabelTooltip: 'Initial rage at the start of each iteration.',\n});\n\nexport const ShoutPicker = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecProtectionWarrior>({\n\tfieldName: 'shout',\n\tactionId: () => ActionId.fromSpellId(47436),\n\tvalue: WarriorShout.WarriorShoutBattle,\n});\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n\tSpec,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tWarriorShout,\n\tProtectionWarrior_Rotation as ProtectionWarriorRotation,\n\tProtectionWarrior_Options as ProtectionWarriorOptions,\n} from '../core/proto/warrior.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\nimport DefaultApl from './apls/default.apl.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\nexport const ROTATION_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\nexport const ROTATION_PRESET_SIMPLE = PresetUtils.makePresetSimpleRotation('Simple Cooldowns', Spec.SpecProtectionWarrior, ProtectionWarriorRotation.create());\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '2500030023-302-053351225000012521030113321',\n\t}),\n};\n\nexport const UATalents = {\n\tname: 'UA',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '35023301230051002020120002-2-05035122500000252',\n\t}),\n};\n\nexport const DefaultOptions = ProtectionWarriorOptions.create({\n\tshout: WarriorShout.WarriorShoutCommanding,\n\tstartingRage: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tPseudoStat,\n\tTristateEffect\n} from '../core/proto/common.js';\n\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as ProtectionWarriorInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecProtectionWarrior, {\n\tcssClass: 'protection-warrior-sim-ui',\n\tcssScheme: 'warrior',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatArmor,\n\t\tStat.StatBonusArmor,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatAttackPower,\n\t\tStat.StatExpertise,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatDefense,\n\t\tStat.StatBlock,\n\t\tStat.StatBlockValue,\n\t\tStat.StatDodge,\n\t\tStat.StatParry,\n\t\tStat.StatResilience,\n\t\tStat.StatNatureResistance,\n\t\tStat.StatShadowResistance,\n\t\tStat.StatFrostResistance,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatArmor]: 0.174,\n\t\t\t[Stat.StatBonusArmor]: 0.155,\n\t\t\t[Stat.StatStamina]: 2.336,\n\t\t\t[Stat.StatStrength]: 1.555,\n\t\t\t[Stat.StatAgility]: 2.771,\n\t\t\t[Stat.StatAttackPower]: 0.32,\n\t\t\t[Stat.StatExpertise]: 1.44,\n\t\t\t[Stat.StatMeleeHit]: 1.432,\n\t\t\t[Stat.StatMeleeCrit]: 0.925,\n\t\t\t[Stat.StatMeleeHaste]: 0.431,\n\t\t\t[Stat.StatArmorPenetration]: 1.055,\n\t\t\t[Stat.StatBlock]: 1.320,\n\t\t\t[Stat.StatBlockValue]: 1.373,\n\t\t\t[Stat.StatDodge]: 2.606,\n\t\t\t[Stat.StatParry]: 2.649,\n\t\t\t[Stat.StatDefense]: 3.305,\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 6.081,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\t\t\tstrengthOfEarthTotem: TristateEffect.TristateEffectRegular,\n\t\t\tleaderOfThePack: true,\n\t\t\tdevotionAura: TristateEffect.TristateEffectImproved,\n\t\t\tstoneskinTotem: TristateEffect.TristateEffectImproved,\n\t\t\tretributionAura: TristateEffect.TristateEffectImproved,\n\t\t\tthorns: TristateEffect.TristateEffectImproved,\n\t\t\tshadowProtection: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfSanctuary: true,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tsunderArmor: true,\n\t\t\tfaerieFire: true,\n\t\t\tinsectSwarm: true,\n\t\t\tjudgementOfLight: true,\n\t\t}),\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tProtectionWarriorInputs.ShoutPicker,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.IncomingHps,\n\t\t\tOtherInputs.HealingCadence,\n\t\t\tOtherInputs.HealingCadenceVariation,\n\t\t\tOtherInputs.BurstWindow,\n\t\t\tOtherInputs.HpPercentForDefensives,\n\t\t\tOtherInputs.InspirationUptime,\n\t\t\tProtectionWarriorInputs.StartingRage,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t\tPresets.UATalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_DEFAULT,\n\t\t\tPresets.ROTATION_PRESET_SIMPLE,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (): APLRotation => {\n\t\treturn Presets.ROTATION_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecProtectionWarrior,\n\t\t\ttooltip: 'Protection Warrior',\n\t\t\tdefaultName: 'Protection',\n\t\t\ticonUrl: getSpecIcon(Class.ClassWarrior, 2),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceHuman,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ProtectionWarriorSimUI extends IndividualSimUI<Spec.SpecProtectionWarrior> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecProtectionWarrior>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["StartingRage","InputHelpers.makeSpecOptionsNumberInput","fieldName","label","labelTooltip","ShoutPicker","InputHelpers.makeSpecOptionsBooleanIconInput","actionId","ActionId","fromSpellId","value","WarriorShout","WarriorShoutBattle","DefaultGear","PresetUtils.makePresetGear","ROTATION_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_SIMPLE","PresetUtils.makePresetSimpleRotation","Spec","SpecProtectionWarrior","ProtectionWarriorRotation","create","StandardTalents","name","data","SavedTalents","talentsString","UATalents","DefaultOptions","ProtectionWarriorOptions","shout","WarriorShoutCommanding","startingRage","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","SPEC_CONFIG","registerSpecConfig","cssClass","cssScheme","knownIssues","epStats","Stat","StatStamina","StatStrength","StatAgility","StatAttackPower","StatExpertise","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmor","StatBonusArmor","StatArmorPenetration","StatDefense","StatBlock","StatBlockValue","StatDodge","StatParry","StatResilience","StatNatureResistance","StatShadowResistance","StatFrostResistance","epPseudoStats","PseudoStat","PseudoStatMainHandDps","epReferenceStat","displayStats","StatHealth","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","TristateEffectRegular","leaderOfThePack","devotionAura","stoneskinTotem","retributionAura","thorns","shadowProtection","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfMight","blessingOfSanctuary","debuffs","Debuffs","sunderArmor","faerieFire","insectSwarm","judgementOfLight","playerIconInputs","ProtectionWarriorInputs.ShoutPicker","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.IncomingHps","OtherInputs.HealingCadence","OtherInputs.HealingCadenceVariation","OtherInputs.BurstWindow","OtherInputs.HpPercentForDefensives","OtherInputs.InspirationUptime","ProtectionWarriorInputs.StartingRage","OtherInputs.InFrontOfTarget","encounterPicker","showExecuteProportion","presets","Presets.UATalents","rotations","Presets.ROTATION_DEFAULT","Presets.ROTATION_PRESET_SIMPLE","autoRotation","rotation","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassWarrior","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceHuman","Horde","RaceOrc","defaultGear","ProtectionWarriorSimUI","IndividualSimUI","constructor","parentElem","player","super"],"mappings":"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"}