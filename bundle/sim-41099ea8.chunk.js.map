{"version":3,"file":"sim-41099ea8.chunk.js","sources":["../../../ui/healing_priest/inputs.ts","../../../ui/healing_priest/presets.ts","../../../ui/healing_priest/sim.ts"],"sourcesContent":["import { Player } from '../core/player.js';\nimport { Spec, UnitReference, UnitReference_Type as UnitType } from '../core/proto/common.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\nimport { EventID } from '../core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const SelfPowerInfusion = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'powerInfusionTarget',\n\tactionId: () => ActionId.fromSpellId(10060),\n\textraCssClasses: [\n\t\t'within-raid-sim-hide',\n\t],\n\tgetValue: (player: Player<Spec.SpecHealingPriest>) => player.getSpecOptions().powerInfusionTarget?.type == UnitType.Player,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecHealingPriest>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tnewOptions.powerInfusionTarget = UnitReference.create({\n\t\t\ttype: newValue ? UnitType.Player : UnitType.Unknown,\n\t\t\tindex: 0,\n\t\t});\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const InnerFire = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'useInnerFire',\n\tactionId: () => ActionId.fromSpellId(48168),\n});\n\nexport const Shadowfiend = InputHelpers.makeSpecOptionsBooleanIconInput<Spec.SpecHealingPriest>({\n\tfieldName: 'useShadowfiend',\n\tactionId: () => ActionId.fromSpellId(34433),\n});\n","import {\n\tConsumes,\n\tDebuffs,\n\tIndividualBuffs,\n\tFlask,\n\tFood,\n\tRaidBuffs,\n\tTristateEffect,\n\tUnitReference,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tHealingPriest_Options as Options,\n} from '../core/proto/priest.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\nimport DiscApl from './apls/disc.apl.json';\nimport HolyApl from './apls/holy.apl.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DiscDefaultGear = PresetUtils.makePresetGear('Blank', BlankGear, { talentTree: 0 });\nexport const HolyDefaultGear = PresetUtils.makePresetGear('Blank', BlankGear, { talentTree: 1 });\n\nexport const ROTATION_PRESET_DISC = PresetUtils.makePresetAPLRotation('Disc', DiscApl);\nexport const ROTATION_PRESET_HOLY = PresetUtils.makePresetAPLRotation('Holy', HolyApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const DiscTalents = {\n\tname: 'Disc',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '0503203130300512301313231251-2351010303',\n\t}),\n};\nexport const HolyTalents = {\n\tname: 'Holy',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '05032031103-234051032002152530004311051',\n\t}),\n};\n\nexport const DefaultOptions = Options.create({\n\tuseInnerFire: true,\n\tuseShadowfiend: true,\n\trapturesPerMinute: 5,\n\n\tpowerInfusionTarget: UnitReference.create(),\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tstrengthOfEarthTotem: TristateEffect.TristateEffectRegular,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\ttrueshotAura: true,\n\tleaderOfThePack: true,\n\tmoonkinAura: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n});\n","import {\n\tClass,\n\tFaction,\n\tPartyBuffs,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\n\nimport * as HealingPriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecHealingPriest, {\n\tcssClass: 'healing-priest-sim-ui',\n\tcssScheme: 'priest',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t\t'Talents that apply to, \"friendly targets at or below 50% health\" are not implemented.',\n\t\t'Prayer of Mending always bounces the maximum number of times.',\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DiscDefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 2.73,\n\t\t\t[Stat.StatSpirit]: 1.63,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.75,\n\t\t\t[Stat.StatSpellHaste]: 0.28,\n\t\t\t[Stat.StatMP5]: 2.05,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.DiscTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({}),\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tHealingPriestInputs.SelfPowerInfusion,\n\t\tHealingPriestInputs.InnerFire,\n\t\tHealingPriestInputs.Shadowfiend,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.DiscTalents,\n\t\t\tPresets.HolyTalents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_DISC,\n\t\t\tPresets.ROTATION_PRESET_HOLY,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DiscDefaultGear,\n\t\t\tPresets.HolyDefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecHealingPriest>): APLRotation => {\n\t\tconst talentTree = player.getTalentTree();\n\t\tif (talentTree == 0) {\n\t\t\treturn Presets.ROTATION_PRESET_DISC.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.ROTATION_PRESET_HOLY.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecHealingPriest,\n\t\t\ttooltip: 'Discipline Priest',\n\t\t\tdefaultName: 'Discipline',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPriest, 0),\n\n\t\t\ttalents: Presets.DiscTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DiscDefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DiscDefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tspec: Spec.SpecHealingPriest,\n\t\t\ttooltip: 'Holy Priest',\n\t\t\tdefaultName: 'Holy',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPriest, 1),\n\n\t\t\ttalents: Presets.HolyTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.HolyDefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.HolyDefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t]\n});\n\nexport class HealingPriestSimUI extends IndividualSimUI<Spec.SpecHealingPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecHealingPriest>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["SelfPowerInfusion","InputHelpers.makeSpecOptionsBooleanIconInput","fieldName","actionId","ActionId","fromSpellId","extraCssClasses","getValue","player","getSpecOptions","powerInfusionTarget","type","UnitType","Player","setValue","eventID","newValue","newOptions","UnitReference","create","Unknown","index","setSpecOptions","InnerFire","Shadowfiend","DiscDefaultGear","PresetUtils.makePresetGear","BlankGear","talentTree","HolyDefaultGear","ROTATION_PRESET_DISC","PresetUtils.makePresetAPLRotation","DiscApl","ROTATION_PRESET_HOLY","HolyApl","DiscTalents","name","data","SavedTalents","talentsString","HolyTalents","DefaultOptions","Options","useInnerFire","useShadowfiend","rapturesPerMinute","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","strengthOfEarthTotem","TristateEffectRegular","arcaneBrilliance","divineSpirit","trueshotAura","leaderOfThePack","moonkinAura","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","DefaultDebuffs","Debuffs","SPEC_CONFIG","registerSpecConfig","Spec","SpecHealingPriest","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","defaults","gear","Presets.DiscDefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.DiscTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","playerIconInputs","HealingPriestInputs.SelfPowerInfusion","HealingPriestInputs.InnerFire","HealingPriestInputs.Shadowfiend","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","encounterPicker","showExecuteProportion","presets","Presets.HolyTalents","rotations","Presets.ROTATION_PRESET_DISC","Presets.ROTATION_PRESET_HOLY","Presets.HolyDefaultGear","autoRotation","getTalentTree","rotation","raidSimPresets","spec","tooltip","defaultName","iconUrl","getSpecIcon","Class","ClassPriest","defaultFactionRaces","Faction","Race","RaceUnknown","Alliance","RaceDwarf","Horde","RaceUndead","defaultGear","HealingPriestSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"0RAUa,MAAAA,EAAoBC,EAAqE,CACrGC,UAAW,sBACXC,SAAU,IAAMC,EAASC,YAAY,OACrCC,gBAAiB,CAChB,wBAEDC,SAAWC,GAA2CA,EAAOC,iBAAiBC,qBAAqBC,MAAQC,EAASC,OACpHC,SAAU,CAACC,EAAkBP,EAAwCQ,KAC9D,MAAAC,EAAaT,EAAOC,iBACfQ,EAAAP,oBAAsBQ,EAAcC,OAAO,CACrDR,KAAMK,EAAWJ,EAASC,OAASD,EAASQ,QAC5CC,MAAO,IAEDb,EAAAc,eAAeP,EAASE,EAAU,IAI9BM,EAAYtB,EAAqE,CAC7FC,UAAW,eACXC,SAAU,IAAMC,EAASC,YAAY,SAGzBmB,EAAcvB,EAAqE,CAC/FC,UAAW,iBACXC,SAAU,IAAMC,EAASC,YAAY,+0CCPzBoB,EAAkBC,EAA2B,QAASC,EAAW,CAAEC,WAAY,IAC/EC,EAAkBH,EAA2B,QAASC,EAAW,CAAEC,WAAY,IAE/EE,EAAuBC,EAAkC,OAAQC,GACjEC,EAAuBF,EAAkC,OAAQG,GAIjEC,EAAc,CAC1BC,KAAM,OACNC,KAAMC,EAAanB,OAAO,CACzBoB,cAAe,6CAGJC,EAAc,CAC1BJ,KAAM,OACNC,KAAMC,EAAanB,OAAO,CACzBoB,cAAe,6CAIJE,EAAiBC,EAAQvB,OAAO,CAC5CwB,cAAc,EACdC,gBAAgB,EAChBC,kBAAmB,EAEnBnC,oBAAqBQ,EAAcC,WAGvB2B,EAAkBC,EAAS5B,OAAO,CAC9C6B,MAAOC,EAAMC,aACbC,KAAMC,EAAKC,cAGCC,EAAmBC,EAAUpC,OAAO,CAChDqC,cAAeC,EAAeC,uBAC9BC,mBAAoBF,EAAeC,uBACnCE,qBAAsBH,EAAeI,sBACrCC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,IAGDC,EAAyBC,EAAgBjD,OAAO,CAC5DkD,iBAAiB,EACjBC,iBAAkBb,EAAeC,yBAGrBa,EAAiBC,EAAQrD,OAAO,IC1DvCsD,EAAcC,EAAmBC,EAAKC,kBAAmB,CAC9DC,SAAU,wBACVC,UAAW,SAEXC,YAAa,CACZ,wFACA,iEAIDC,QAAS,CACRC,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,cACLJ,EAAKK,eACLL,EAAKM,SAGNC,gBAAiBP,EAAKG,eAEtBK,aAAc,CACbR,EAAKS,WACLT,EAAKU,SACLV,EAAKW,YACLX,EAAKC,cACLD,EAAKE,WACLF,EAAKG,eACLH,EAAKI,cACLJ,EAAKK,eACLL,EAAKM,SAGNM,SAAU,CAETC,KAAMC,EAAwBD,KAE9BE,UAAWC,EAAMC,QAAQ,CACxB,CAACjB,EAAKC,eAAgB,KACtB,CAACD,EAAKE,YAAa,KACnB,CAACF,EAAKG,gBAAiB,EACvB,CAACH,EAAKI,eAAgB,IACtB,CAACJ,EAAKK,gBAAiB,IACvB,CAACL,EAAKM,SAAU,OAGjBY,SAAUC,EAEVC,QAASC,EAAoBjE,KAE7BkE,YAAaC,EAEbC,UAAWC,EACXC,WAAYC,EAAWzF,OAAO,IAC9B0F,gBAAiBC,EACjBC,QAASC,GAIVC,iBAAkB,CACjBC,EACAC,EACAC,GAGDC,wBAAyB,GAEzBC,wBAAyB,GAGzBC,YAAa,CACZC,OAAQ,IAETC,gBAAiB,CAEhBC,uBAAuB,GAGxBC,QAAS,CAERtB,QAAS,CACRC,EACAsB,GAGDC,UAAW,CACVC,EACAC,GAGDjC,KAAM,CACLC,EACAiC,IAIFC,aAAezH,GAEI,GADCA,EAAO0H,gBAElBJ,EAA6BK,SAASA,SAEtCJ,EAA6BI,SAASA,SAI/CC,eAAgB,CACf,CACCC,KAAM1D,EAAKC,kBACX0D,QAAS,oBACTC,YAAa,aACbC,QAASC,EAAYC,EAAMC,YAAa,GAExCtC,QAASC,EAAoBjE,KAC7BkE,YAAaC,EACbL,SAAUC,EACVwC,oBAAqB,CACpB,CAACC,EAAQzH,SAAU0H,EAAKC,YACxB,CAACF,EAAQG,UAAWF,EAAKG,UACzB,CAACJ,EAAQK,OAAQJ,EAAKK,YAEvBC,YAAa,CACZ,CAACP,EAAQzH,SAAU,CAAC,EACpB,CAACyH,EAAQG,UAAW,CACnB,EAAGjD,EAAwBD,MAE5B,CAAC+C,EAAQK,OAAQ,CAChB,EAAGnD,EAAwBD,QAI9B,CACCuC,KAAM1D,EAAKC,kBACX0D,QAAS,cACTC,YAAa,OACbC,QAASC,EAAYC,EAAMC,YAAa,GAExCtC,QAASuB,EAAoBvF,KAC7BkE,YAAaC,EACbL,SAAUC,EACVwC,oBAAqB,CACpB,CAACC,EAAQzH,SAAU0H,EAAKC,YACxB,CAACF,EAAQG,UAAWF,EAAKG,UACzB,CAACJ,EAAQK,OAAQJ,EAAKK,YAEvBC,YAAa,CACZ,CAACP,EAAQzH,SAAU,CAAC,EACpB,CAACyH,EAAQG,UAAW,CACnB,EAAGhB,EAAwBlC,MAE5B,CAAC+C,EAAQK,OAAQ,CAChB,EAAGlB,EAAwBlC,WAOzB,MAAMuD,UAA2BC,EACvC,WAAAC,CAAYC,EAAyBhJ,GAC9BiJ,MAAAD,EAAYhJ,EAAQiE,EAC3B"}