{"version":3,"file":"sim-78958527.chunk.js","sources":["../../../ui/shadow_priest/inputs.ts","../../../ui/shadow_priest/presets.ts","../../../ui/shadow_priest/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport {\n\tShadowPriest_Options_Armor as Armor,\n} from '../core/proto/priest.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ArmorInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecShadowPriest, Armor>({\n\tfieldName: 'armor',\n\tvalues: [\n\t\t{ value: Armor.NoArmor, tooltip: 'No Inner Fire' },\n\t\t{ actionId: () => ActionId.fromSpellId(10952), value: Armor.InnerFire },\n\t],\n});\n","import {\n\tConsumes,\n\tDebuffs,\n\tFlask,\n\tFood,\n\tIndividualBuffs,\n\tProfession,\n\tRaidBuffs,\n\tSpellPowerBuff,\n\tTristateEffect,\n\tWeaponImbue,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tShadowPriest_Options as Options,\n} from '../core/proto/priest.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\nimport DefaultApl from './apls/default.apl.json'\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const BLANK_GEAR_PRESET = PresetUtils.makePresetGear('Blank', BlankGear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '5042001303--5002505103501051',\n\t}),\n};\n\nexport const DefaultOptions = Options.create({});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskOfSupremePower,\n\tmainHandImbue: WeaponImbue.BrillianWizardOil,\n\tfood: Food.FoodNightfinSoup,\n\tspellPowerBuff: SpellPowerBuff.SpellPowerBuffUnknown,\n\tshadowPowerBuff: true,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tpowerWordFortitude: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tdivineSpirit: true,\n\tmoonkinAura: true,\n});\n\nexport const DefaultIndividualBuffs = IndividualBuffs.create({\n\tblessingOfKings: true,\n\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tjudgementOfWisdom: true,\n});\n\nexport const OtherDefaults = {\n\tchannelClipDelay: 100,\n\tprofession1: Profession.Engineering,\n\tprofession2: Profession.Tailoring,\n};\n","import {\n\tClass,\n\tFaction,\n\tPartyBuffs,\n\tRace,\n\tSpec,\n\tStat,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { Player } from '../core/player.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as ConsumablesInputs from '../core/components/inputs/consumables.js';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as ShadowPriestInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecShadowPriest, {\n\tcssClass: 'shadow-priest-sim-ui',\n\tcssScheme: 'priest',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t\t\"The Homunculi Rune is not currently implemented until more data is available\"\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatShadowPower,\n\t\tStat.StatHolyPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatSpellPenetration,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatShadowPower,\n\t\tStat.StatHolyPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellPenetration,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecShadowPriest>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellHit, player.getTalents().shadowFocus * 1 * Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE);\n\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.BLANK_GEAR_PRESET.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.11,\n\t\t\t[Stat.StatSpirit]: 0.47,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellHit]: 0.87,\n\t\t\t[Stat.StatSpellCrit]: 0.74,\n\t\t\t[Stat.StatSpellHaste]: 1.65,\n\t\t\t[Stat.StatMP5]: 0.00,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\n\t\tpartyBuffs: PartyBuffs.create({}),\n\n\t\tindividualBuffs: Presets.DefaultIndividualBuffs,\n\n\t\tdebuffs: Presets.DefaultDebuffs,\n\n\t\tother: Presets.OtherDefaults,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShadowPriestInputs.ArmorInput,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.BlessingOfWisdom,\n\t\tBuffDebuffInputs.ManaSpringTotem,\n\t\tBuffDebuffInputs.StaminaBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.SpellScorchDebuff,\n\t\tBuffDebuffInputs.SpellWintersChillDebuff,\n\t\t...ConsumablesInputs.AGILITY_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.STRENGTH_CONSUMES_CONFIG,\n\t\t...ConsumablesInputs.FIRE_POWER_CONFIG,\n\t\t...ConsumablesInputs.FROST_POWER_CONFIG,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.ChannelClipDelay,\n\t\t],\n\t},\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t],\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_DEFAULT,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.BLANK_GEAR_PRESET,\n\t\t],\n\t},\n\n\tautoRotation: (_: Player<Spec.SpecShadowPriest>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecShadowPriest,\n\t\t\ttooltip: specNames[Spec.SpecShadowPriest],\n\t\t\tdefaultName: 'Shadow',\n\t\t\ticonUrl: getSpecIcon(Class.ClassPriest, 2),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceDwarf,\n\t\t\t\t[Faction.Horde]: Race.RaceUndead,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.BLANK_GEAR_PRESET.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.BLANK_GEAR_PRESET.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class ShadowPriestSimUI extends IndividualSimUI<Spec.SpecShadowPriest> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecShadowPriest>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["ArmorInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","Armor","NoArmor","tooltip","actionId","ActionId","fromSpellId","InnerFire","BLANK_GEAR_PRESET","PresetUtils.makePresetGear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","StandardTalents","name","data","SavedTalents","create","talentsString","DefaultOptions","Options","DefaultConsumes","Consumes","flask","Flask","FlaskOfSupremePower","mainHandImbue","WeaponImbue","BrillianWizardOil","food","Food","FoodNightfinSoup","spellPowerBuff","SpellPowerBuff","SpellPowerBuffUnknown","shadowPowerBuff","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","powerWordFortitude","arcaneBrilliance","divineSpirit","moonkinAura","DefaultIndividualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","DefaultDebuffs","Debuffs","judgementOfWisdom","OtherDefaults","channelClipDelay","profession1","Profession","Engineering","profession2","Tailoring","SPEC_CONFIG","registerSpecConfig","Spec","SpecShadowPriest","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatShadowPower","StatHolyPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatSpellPenetration","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","player","stats","Stats","addStat","getTalents","shadowFocus","Mechanics.SPELL_HIT_RATING_PER_HIT_CHANCE","talents","defaults","gear","Presets.BLANK_GEAR_PRESET","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","Presets.DefaultIndividualBuffs","debuffs","Presets.DefaultDebuffs","other","Presets.OtherDefaults","playerIconInputs","ShadowPriestInputs.ArmorInput","includeBuffDebuffInputs","BuffDebuffInputs.BlessingOfWisdom","BuffDebuffInputs.ManaSpringTotem","BuffDebuffInputs.StaminaBuff","excludeBuffDebuffInputs","BuffDebuffInputs.SpellScorchDebuff","BuffDebuffInputs.SpellWintersChillDebuff","ConsumablesInputs.AGILITY_CONSUMES_CONFIG","ConsumablesInputs.STRENGTH_CONSUMES_CONFIG","ConsumablesInputs.FIRE_POWER_CONFIG","ConsumablesInputs.FROST_POWER_CONFIG","otherInputs","inputs","OtherInputs.TankAssignment","OtherInputs.ChannelClipDelay","encounterPicker","showExecuteProportion","presets","rotations","Presets.ROTATION_PRESET_DEFAULT","autoRotation","_","rotation","raidSimPresets","spec","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassPriest","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceDwarf","Horde","RaceUndead","defaultGear","ShadowPriestSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}