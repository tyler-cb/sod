{"version":3,"file":"sim-87e2d995.chunk.js","sources":["../../../ui/core/components/inputs/totem_inputs.ts","../../../ui/restoration_shaman/presets.ts","../../../ui/restoration_shaman/sim.ts"],"sourcesContent":["import { IconEnumPicker } from '../icon_enum_picker.js';\nimport { IndividualSimUI } from '../../individual_sim_ui.js';\nimport { Player } from '../../player.js';\nimport { Spec } from '../../proto/common.js';\nimport {\n\tAirTotem,\n\tEarthTotem,\n\tFireTotem,\n\tWaterTotem,\n\tShamanTotems,\n} from '../../proto/shaman.js';\nimport { ShamanSpecs } from '../../proto_utils/utils.js';\nimport { EventID, TypedEvent } from '../../typed_event.js';\n\nimport { ContentBlock } from '../content_block.js';\nimport { Input } from '../input.js';\n\nexport function TotemsSection(parentElem: HTMLElement, simUI: IndividualSimUI<ShamanSpecs>): ContentBlock {\n\tlet contentBlock = new ContentBlock(parentElem, 'totems-settings', {\n\t\theader: { title: 'Totems' }\n\t});\n\n\tlet totemDropdownGroup = Input.newGroupContainer();\n\ttotemDropdownGroup.classList.add('totem-dropdowns-container', 'icon-group');\n\n\tcontentBlock.bodyElement.appendChild(totemDropdownGroup);\n\n\tnew IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'earth-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffdfba', value: EarthTotem.NoEarthTotem },\n\t\t\tStrengthOfEarthTotem,\n\t\t\tStoneskinTotem,\n\t\t\tTremorTotem,\n\t\t],\n\t\tequals: (a: EarthTotem, b: EarthTotem) => a == b,\n\t\tzeroValue: EarthTotem.NoEarthTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.levelChangeEmitter]),\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.earth || EarthTotem.NoEarthTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.earth = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tnew IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'fire-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#ffb3ba', value: FireTotem.NoFireTotem },\n\t\t\tSearingTotem,\n\t\t\tFireNovaTotem,\n\t\t\tMagmaTotem,\n\t\t],\n\t\tequals: (a: FireTotem, b: FireTotem) => a == b,\n\t\tzeroValue: FireTotem.NoFireTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.levelChangeEmitter]),\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.fire || FireTotem.NoFireTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.fire = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tnew IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'water-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#bae1ff', value: WaterTotem.NoWaterTotem },\n\t\t\tHealingStreamTotem,\n\t\t\tManaSpringTotem,\n\t\t],\n\t\tequals: (a: WaterTotem, b: WaterTotem) => a == b,\n\t\tzeroValue: WaterTotem.NoWaterTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.levelChangeEmitter]),\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.water || WaterTotem.NoWaterTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.water = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\tnew IconEnumPicker(totemDropdownGroup, simUI.player, {\n\t\textraCssClasses: [\n\t\t\t'air-totem-picker',\n\t\t],\n\t\tnumColumns: 1,\n\t\tvalues: [\n\t\t\t{ color: '#baffc9', value: AirTotem.NoAirTotem },\n\t\t\tWindfuryTotem,\n\t\t\tGraceOfAirTotem,\n\t\t],\n\t\tequals: (a: AirTotem, b: AirTotem) => a == b,\n\t\tzeroValue: AirTotem.NoAirTotem,\n\t\tchangedEvent: (player: Player<ShamanSpecs>) => TypedEvent.onAny([player.specOptionsChangeEmitter, player.levelChangeEmitter]),\n\t\tgetValue: (player: Player<ShamanSpecs>) => player.getSpecOptions().totems?.air || AirTotem.NoAirTotem,\n\t\tsetValue: (eventID: EventID, player: Player<ShamanSpecs>, newValue: number) => {\n\t\t\tconst newOptions = player.getSpecOptions();\n\t\t\tif (!newOptions.totems)\n\t\t\t\tnewOptions.totems = ShamanTotems.create();\n\t\t\tnewOptions.totems!.air = newValue;\n\t\t\tplayer.setSpecOptions(eventID, newOptions);\n\t\t},\n\t});\n\n\treturn contentBlock;\n}\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Earth Totems\n///////////////////////////////////////////////////////////////////////////\n\nexport const StoneskinTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 8071, \tminLevel: 4, \tmaxLevel: 13 \t},\n\t\t{ id: 8154, \tminLevel: 14, maxLevel: 23 \t},\n\t\t{ id: 8155, \tminLevel: 24, maxLevel: 33 \t},\n\t\t{ id: 10406, \tminLevel: 34, maxLevel: 43 \t},\n\t\t{ id: 10407, \tminLevel: 44, maxLevel: 53 \t},\n\t\t{ id: 10408, \tminLevel: 54 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: EarthTotem.StoneskinTotem,\n};\n\nexport const StrengthOfEarthTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 8075, \tminLevel: 10, maxLevel: 23 \t},\n\t\t{ id: 8160, \tminLevel: 24, maxLevel: 37 \t},\n\t\t{ id: 8161, \tminLevel: 38, maxLevel: 51 \t},\n\t\t{ id: 10442, \tminLevel: 52, maxLevel: 59 \t},\n\t\t{ id: 25361, \tminLevel: 60 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: EarthTotem.StrengthOfEarthTotem,\n};\n\nexport const TremorTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 8143, minLevel: 18 },\n\t]),\n\tvalue: EarthTotem.TremorTotem,\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Fire Totems\n///////////////////////////////////////////////////////////////////////////\n\nexport const SearingTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 3599, minLevel: 10, maxLevel: 19 },\n\t\t{ id: 6363, minLevel: 20, maxLevel: 29 },\n\t\t{ id: 6364, minLevel: 30, maxLevel: 39 },\n\t\t{ id: 6365, minLevel: 40, maxLevel: 49 },\n\t\t{ id: 10437, minLevel: 50, maxLevel: 59 },\n\t\t{ id: 10438, minLevel: 60 },\n\t]),\n\tvalue: FireTotem.SearingTotem,\n};\n\nexport const FireNovaTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 1535, \tminLevel: 12, maxLevel: 21 \t},\n\t\t{ id: 8498, \tminLevel: 22, maxLevel: 31 \t},\n\t\t{ id: 8499, \tminLevel: 32, maxLevel: 41 \t},\n\t\t{ id: 11314, \tminLevel: 42, maxLevel: 51 \t},\n\t\t{ id: 11315, \tminLevel: 52 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: FireTotem.FireNovaTotem,\n};\n\nexport const MagmaTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 8190, \tminLevel: 26, maxLevel: 35 \t},\n\t\t{ id: 10585, \tminLevel: 36, maxLevel: 45 \t},\n\t\t{ id: 10586, \tminLevel: 46, maxLevel: 55 \t},\n\t\t{ id: 10587, \tminLevel: 56 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: FireTotem.FireNovaTotem,\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Water Totems\n///////////////////////////////////////////////////////////////////////////\n\nexport const HealingStreamTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 5394, \tminLevel: 20, maxLevel: 29 \t},\n\t\t{ id: 6375, \tminLevel: 30, maxLevel: 39 \t},\n\t\t{ id: 6377, \tminLevel: 40, maxLevel: 49 \t},\n\t\t{ id: 10462, \tminLevel: 50, maxLevel: 59 \t},\n\t\t{ id: 10463, \tminLevel: 60 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: WaterTotem.HealingStreamTotem,\n};\n\nexport const ManaSpringTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 5675, \tminLevel: 26, maxLevel: 35 \t},\n\t\t{ id: 10495, \tminLevel: 36, maxLevel: 45 \t},\n\t\t{ id: 10496, \tminLevel: 46, maxLevel: 55 \t},\n\t\t{ id: 10497, \tminLevel: 56 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: WaterTotem.ManaSpringTotem,\n};\n\n///////////////////////////////////////////////////////////////////////////\n//                                 Air Totems\n///////////////////////////////////////////////////////////////////////////\n\nexport const WindfuryTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 8512, \tminLevel: 32, maxLevel: 41 \t},\n\t\t{ id: 10613, \tminLevel: 42, maxLevel: 51 \t},\n\t\t{ id: 25359, \tminLevel: 52 \t\t\t\t\t\t\t\t},\n\t]),\n\tvalue: AirTotem.WindfuryTotem,\n};\n\nexport const GraceOfAirTotem = {\n\tactionId: (player: Player<Spec>) => player.getMatchingSpellActionId([\n\t\t{ id: 10627, minLevel: 42, maxLevel: 55 },\n\t\t{ id: 10627, minLevel: 56, maxLevel: 59 },\n\t\t{ id: 25359, minLevel: 60 \t\t\t\t\t\t\t},\n\t]),\n\tvalue: AirTotem.GraceOfAirTotem,\n};\n","import {\n\tConsumes,\n\tFlask,\n\tFood,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tRestorationShaman_Options as RestorationShamanOptions,\n\tShamanShield,\n} from '../core/proto/shaman.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const TankHealingTalents = {\n\tname: 'Tank Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-30205033-05005331335010501122331251',\n\t}),\n};\nexport const RaidHealingTalents = {\n\tname: 'Raid Healing',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '-3020503-50005331335310501122331251',\n\t}),\n};\n\nexport const DefaultOptions = RestorationShamanOptions.create({\n\tshield: ShamanShield.WaterShield,\n\tearthShieldPPM: 0,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n","import { ShamanImbueInputMH, ShamanImbueInputOH } from '../core/components/inputs/shaman_imbues.js';\nimport { ShamanShieldInput } from '../core/components/inputs/shaman_shields.js';\nimport { TotemsSection } from '../core/components/inputs/totem_inputs.js';\nimport {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\n// import * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecRestorationShaman, {\n\tcssClass: 'restoration-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\twarnings: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpirit,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecRestorationShaman>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellCrit, player.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t[Stat.StatSpirit]: 0.05,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t[Stat.StatMP5]: 0.08,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tdivineSpirit: true,\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: 2,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tfaerieFire: true,\n\t\t\tjudgementOfWisdom: true,\n\t\t\tcurseOfElements: true,\n\t\t}),\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShamanShieldInput<Spec.SpecRestorationShaman>(),\n\t\tShamanImbueInputMH<Spec.SpecRestorationShaman>(),\n\t\tShamanImbueInputOH<Spec.SpecRestorationShaman>(),\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tOtherInputs.TankAssignment\n\t\t],\n\t},\n\tcustomSections: [\n\t\tTotemsSection,\n\t],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.RaidHealingTalents,\n\t\t\tPresets.TankHealingTalents,\n\t\t],\n\t\trotations: [\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (_player: Player<Spec.SpecRestorationShaman>): APLRotation => {\n\t\treturn APLRotation.create();\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecRestorationShaman,\n\t\t\ttooltip: specNames[Spec.SpecRestorationShaman],\n\t\t\tdefaultName: 'Restoration',\n\t\t\ticonUrl: getSpecIcon(Class.ClassShaman, 2),\n\n\t\t\ttalents: Presets.RaidHealingTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceUnknown,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n});\n\nexport class RestorationShamanSimUI extends IndividualSimUI<Spec.SpecRestorationShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecRestorationShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["StoneskinTotem","actionId","player","getMatchingSpellActionId","id","minLevel","maxLevel","value","EarthTotem","StrengthOfEarthTotem","TremorTotem","SearingTotem","FireTotem","FireNovaTotem","MagmaTotem","HealingStreamTotem","WaterTotem","ManaSpringTotem","WindfuryTotem","AirTotem","GraceOfAirTotem","DefaultGear","PresetUtils.makePresetGear","TankHealingTalents","name","data","SavedTalents","create","talentsString","RaidHealingTalents","DefaultOptions","RestorationShamanOptions","shield","ShamanShield","WaterShield","earthShieldPPM","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","SPEC_CONFIG","registerSpecConfig","Spec","SpecRestorationShaman","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpirit","StatSpellPower","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","gear","Presets.DefaultGear","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.RaidHealingTalents","specOptions","Presets.DefaultOptions","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","debuffs","Debuffs","faerieFire","judgementOfWisdom","curseOfElements","playerIconInputs","ShamanShieldInput","ShamanImbueInputMH","ShamanImbueInputOH","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","OtherInputs.TankAssignment","customSections","parentElem","simUI","contentBlock","ContentBlock","header","title","totemDropdownGroup","Input","newGroupContainer","classList","add","bodyElement","appendChild","IconEnumPicker","extraCssClasses","numColumns","values","color","NoEarthTotem","equals","a","b","zeroValue","changedEvent","TypedEvent","onAny","specOptionsChangeEmitter","levelChangeEmitter","getValue","getSpecOptions","totems","earth","setValue","eventID","newValue","newOptions","ShamanTotems","setSpecOptions","NoFireTotem","fire","NoWaterTotem","water","NoAirTotem","air","encounterPicker","showExecuteProportion","presets","Presets.TankHealingTalents","rotations","autoRotation","_player","APLRotation","raidSimPresets","spec","tooltip","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassShaman","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","Horde","RaceOrc","defaultGear","RestorationShamanSimUI","IndividualSimUI","constructor","super"],"mappings":"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"}